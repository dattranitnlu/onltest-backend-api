version: "2.2"
services:
  database:
    image: postgres:14.1-alpine3.15
    ports:
      - "5432:5432"
    environment:
      PG-USER: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "root"
      POSTGRES_DB: "testmaker_dev"
    volumes:
      - ../mount/postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    volumes:
      - ../mount/zk-data:/var/lib/zookeeper/data
      - ../mount/zk-txn-logs:/var/lib/zookeeper/log

  kafkaserver:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=localhost
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS=dresses:1:1,ratings:1:1, answer:1:1
    volumes:
      - ../mount/kafka-data:/var/lib/kafka/data
    depends_on:
      - zookeeper

  redisserver:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - ../mount/redis-data:/data
  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ../mount/minio/minio_server:/data
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: m1n1os@rv@r
    command: server /data --console-address :9001
    restart: always
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ../mount/esdata1:/usr/share/elasticsearch/data
    ports:
      - "9300:9300"
      - "9200:9200"
    networks:
      backend:
        aliases:
          - "elasticsearch"
  kibana:
    image: docker.elastic.co/kibana/kibana:7.7.0
    container_name: kibana
    environment:
      ELASTICSEARCH_URL: "http://elasticsearch:9300"
    ports:
      - "5601:5601"
    networks:
      backend:
        aliases:
          - "kibana"
  logstash:
    image: docker.elastic.co/logstash/logstash:7.7.0
    container_name: logstash
    command: logstash -f /etc/logstash/conf.d/logstash.conf
    volumes:
      - ../mount/config:/etc/logstash/conf.d
    ports:
      - "5000:5000"
    networks:
      backend:
        aliases:
          - "logstash"
#  mongo:
#    image: mongo:latest
#    volumes:
#      - ../mount/mongo-data:/data/db
#    ports:
#      - "27017:27017"
#    restart: always

volumes:
  esdata1:
    driver: local
networks:
  backend:
    driver: bridge